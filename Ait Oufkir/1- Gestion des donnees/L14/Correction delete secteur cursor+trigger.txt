





DELIMITER $$
DROP TRIGGER if EXISTS deleteSecteur; $$
CREATE TRIGGER deleteSecteur BEFORE DELETE on secteur for EACH ROW
BEGIN
	/*------------------------------------Variables*/
	INSERT INTO archive_secteur SELECT old.code_secteur, old.Nom_secteur;
    bloc1: BEGIN
    	/*------------------------------------Variables*/
        	declare cf int;
            DECLARE nf varchar(50);
            DECLARE cs int;
            DECLARE fincursor boolean DEFAULT false;
    	/*--------------------------------------------*/
        DECLARE c1 CURSOR FOR
        SELECT code_filiere, Nom_Filiere, code_secteur
        FROM filiere
        WHERE code_secteur = old.code_secteur;
        
        DECLARE CONTINUE HANDLER FOR not found set fincursor:=true;
        OPEN c1;
        FETCH c1 into cf,nf, cs;
        	WHILE(fincursor = false)DO 
            	INSERT INTO archive_filiere VALUES(cf,nf, cs);
                bloc2: BEGIN
                    /*------------------------------------Variables*/
						DECLARE cst int;
						DECLARE pst varchar(50);
						DECLARE nst varchar(50);
						DECLARE gst varchar(20);
						DECLARE dst date;
						DECLARE cfst int;
                        DECLARE fincursor1 boolean DEFAULT false;
                    /*--------------------------------------------*/
                    DECLARE c2 CURSOR for 
                    SELECT code_Stagiaire, Nom_Stagiaire, Prenom_Stagiaire, Genre_Stagiaire, Datenaissance, code_filiere
                    FROM stagiaire
                    WHERE code_filiere=cf;
					DECLARE CONTINUE HANDLER FOR NOT found set fincursor1:=true;
                    OPEN c2;
                    FETCH c2 INTO cst, pst, nst, gst, dst, cfst;
                    WHILE(fincursor1=false)DO 
                    	INSERT INTO archive_stagiaire VALUES(cst, pst, nst, gst, dst, cfst);
                        bloc3:BEGIN
                            /*------------------------------------Variables*/
                                DECLARE csn int;
                                DECLARE cdn int;
                                DECLARE nn float;
                                DECLARE fincursor2 boolean DEFAULT false;
                            /*--------------------------------------------*/
                           DECLARE c3 CURSOR FOR
                           SELECT code_Stagiaire, code_Module, Note
							FROM notation 
                            WHERE code_Stagiaire =cst;
                            DECLARE CONTINUE HANDLER FOR NOT found set fincursor2:=true;
                            OPEN c3;
                            FETCH c3 INTO csn, cdn, nn;
                            WHILE (fincursor2=false) DO
                            	INSERT INTO archive_notation VALUES(csn, cdn, nn);                            
                            	FETCH c3 INTO csn, cdn, nn;
                            END WHILE;
                            DELETE FROM notation WHERE code_Stagiaire=cst;
                            CLOSE c3;
                            
                        end bloc3;
                    	FETCH c2 INTO cst, pst, nst, gst, dst, cfst;
                    END WHILE;
                    	DELETE FROM stagiaire WHERE code_filiere = cf;
                    CLOSE c2;
                end bloc2;
                bloc4:BEGIN
                	/*------------------------------------Variables*/   
                    	DECLARE cfp int;
                    	DECLARE cmp int;
                    	DECLARE coe int;
                    	DECLARE fincursor3 boolean DEFAULT false;
                    /*--------------------------------------------*/
                    DECLARE c4 CURSOR FOR
                    SELECT code_filiere, code_Module, Coefficient
                    FROM programme 
                    WHERE code_filiere = cf;
                   	DECLARE CONTINUE HANDLER FOR NOT found set fincursor3:=true;
                    OPEN c4;
                    FETCH c4 INTO cfp, cmp, coe;
                    WHILE(fincursor3=false) DO 
                    	INSERT INTO archive_programme VALUES(cfp, cmp, coe);
                        bloc5:BEGIN
                                    /*------------------------------------Variables*/
                                    	DECLARE  codem int;
                                    	DECLARE nomm varchar(50);
                                    	DECLARE fincursor6 boolean DEFAULT false;
                                    /*--------------------------------------------*/
                                    DECLARE c5 CURSOR for 
                                    SELECT  code_Module, Nom_Module
									FROM module
                                    WHERE code_Module = cmp;
                                    DECLARE CONTINUE HANDLER FOR Not found set fincursor6:=true;
                                    OPEN c5;
                                    	FETCH c5 into codem, nomm;
                                        WHILE(fincursor6=false)DO
                                        	INSERT INTO archive_module VALUES(codem, nomm);
                                        	FETCH c5 into codem, nomm;
                                        end WHILE;
                                        DELETE FROM module WHERE module.code_Module=cmp;
                                    CLOSE c5;
                                end bloc5;
                    	FETCH c4 INTO cfp, cmp, coe;
                    END WHILE;
                    DELETE FROM programme WHERE code_filiere=cf;
                    CLOSE c4;                   
                end bloc4;
        		FETCH c1 into cf,nf, cs;
        	END WHILE;
            DELETE from filiere WHERE filiere.code_secteur = old.code_secteur;
        close c1;
    end bloc1;
    
    
END$$









INSERT INTO `stagiaire` (`code_Stagiaire`, `Nom_Stagiaire`, `Prenom_Stagiaire`, `Genre_Stagiaire`, `Datenaissance`, `code_filiere`) VALUES
(8, 'ww', 'abdo', 'H', '1999-05-05', 1),
(10, 'aaa', 'ali', 'H', '2000-08-08', 1),
(20, 'oo', 'omar', 'H', '2000-03-03', 2),
(30, 'sss', 'samira', 'F', '2000-08-08', 3),
(40, 'M', 'Meryem', 'F', '2000-03-03', 3),
(50, 'Ka', 'Karim', 'H', '2000-03-03', 4),
(60, 'FFF', 'Fatima', 'F', '2000-03-03', 4);

INSERT INTO `secteur` (`code_secteur`, `Nom_secteur`) VALUES
(1, 'NTIC'),
(2, 'AGC');

INSERT INTO `programme` (`code_filiere`, `code_Module`, `Coefficient`) VALUES
(1, 100, 2),
(1, 200, 3),
(1, 300, 2),
(1, 400, 3),
(1, 600, 4),
(1, 900, 3),
(2, 100, 1),
(2, 300, 1),
(3, 100, 2),
(3, 300, 2),
(3, 500, 5),
(3, 700, 4),
(3, 800, 5),
(4, 100, 1),
(4, 200, 3),
(4, 300, 1),
(4, 400, 3),
(4, 500, 3),
(4, 600, 5);


INSERT INTO `notation` (`code_Stagiaire`, `code_Module`, `Note`) VALUES
(8, 200, 14),
(8, 300, 3),
(8, 900, 10),
(10, 300, 12),
(10, 400, 14),
(10, 600, 16),
(20, 100, 12),
(20, 300, 16),
(30, 500, 12),
(30, 800, 14),
(40, 800, 2),
(50, 200, 2),
(50, 600, 7),
(60, 500, 14);

INSERT INTO `module` (`code_Module`, `Nom_Module`) VALUES
(100, 'FR'),
(200, 'POO'),
(300, 'ANG'),
(400, 'JS'),
(500, 'Compta'),
(600, 'PHP'),
(700, 'Gestion des Ese'),
(800, 'Finance'),
(900, 'Mysql');


INSERT INTO `filiere` (`code_filiere`, `Nom_Filiere`, `code_secteur`) VALUES
(1, 'Dev info', 1),
(2, 'ID', 1),
(3, 'Gestion', 2),
(4, 'Finance', 2);



